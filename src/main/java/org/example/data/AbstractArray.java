package org.example.data;

public interface AbstractArray<T> {
    /**
     * Метод для получения элемента по индексу
     *
     * @param index Индекс значения
     * @return Возвращает значение элемента по соответсвующему индексу
     * @throws IndexOutOfBoundsException Выбрасывает исключение в случае если индекс выходит за прелелы массива
     */
    T get(int index) throws IndexOutOfBoundsException;

    /**
     * Метода для установки элемента по соответсвующему индексу
     *
     * @param index  Индекс элемента в котором будет меняться значение
     * @param object Новое значение для конкретного индекса
     * @throws IndexOutOfBoundsException Выбрасывает исключение в случае если индекс выходит за прелелы массива
     */
    void set(int index, T object) throws IndexOutOfBoundsException;

    /**
     * Добавление элемента в конец массива
     *
     * @param object Значение элемента массива
     */
    void add(T object);

    /**
     * Преобразование днамического массив в массив object-ов
     *
     * @return Массив значений динамического массива
     */
    Object[] toArray();

    /**
     * Добавление элемента на заданный индекс массива со сдвигом всех элементов в право
     *
     * @param object Значение элемента массива
     * @param index  Индекс элемента на которое будет добавлено значение
     * @throws IndexOutOfBoundsException Выбрасывает исключение в случае если индекс выходит за прелелы массива
     */
    void add(T object, int index) throws IndexOutOfBoundsException;

    /**
     * Удаление первого вхождения заданного значения в массиве
     *
     * @param object Значение элемента массива которое будет удалено
     * @return Возвращает true в случае если элемент был найден и удалён, в противном случае возвращает false
     */
    boolean remove(T object);

    /**
     * Удаление значение на конкретном индексе со сдвигом всех значений влево
     *
     * @param index Индекс элемента которое будет удалён
     * @throws IndexOutOfBoundsException Выбрасывает исключение в случае если индекс выходит за прелелы массива
     */
    void removeAt(int index) throws IndexOutOfBoundsException;

    /**
     * Получение реального размера данных массива
     *
     * @return Возвращает размер массива данных
     */
    int size();

    /**
     * Проверка массива на пустоту
     *
     * @return Если массив пустой возвращает true, иначе false
     */
    boolean isEmpty();

    /**
     * Проверка на наличие элемента в массиве
     *
     * @param object Значение элемента для поиска
     * @return Возвращает true если значение элемента содержится в массиве, иначе false
     */
    boolean contains(T object);

    /**
     * Получение индекса первого вхождения значения в массив
     *
     * @param object Значение элемента для поиска
     * @return Возвращает индекс элмента если он содержится в массиве, в противном случае вернёт -1
     */
    int indexOf(T object);

    /**
     * Получение индекса последнего вхождения значения в массив
     *
     * @param object Значение элемента для поиска
     * @return Возвращает индекс элмента если он содержится в массиве, в противном случае вернёт -1
     */
    int lastIndexOf(T object);

    /**
     * Очистка всех данных в массиве
     */
    void clear();
}
